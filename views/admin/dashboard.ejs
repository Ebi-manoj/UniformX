<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Dashboard</title>
  <!-- Include Chart.js -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    :root {
      --primary-color: #4361ee;
      --secondary-color: #3f37c9;
      --success-color: #4caf50;
      --warning-color: #ff9800;
      --danger-color: #f44336;
      --light-color: #f8f9fa;
      --dark-color: #343a40;
      --border-color: #dee2e6;
      --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    body {
      background-color: #f5f5f7;
      color: #333;
      line-height: 1.6;
    }

    .container {
      width: 95%;
      max-width: 1400px;
      margin: 0 auto;
      padding: 20px;
    }

    .dashboard-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }

    .dashboard-title {
      font-size: 24px;
      font-weight: 700;
    }

    .filter-controls {
      display: flex;
      gap: 15px;
      align-items: center;
    }

    .filter-button {
      background-color: white;
      border: 1px solid var(--border-color);
      border-radius: 6px;
      padding: 8px 16px;
      display: flex;
      align-items: center;
      gap: 8px;
      cursor: pointer;
      font-size: 14px;
    }

    .cards-container {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 20px;
      margin-bottom: 20px;
    }

    .card {
      background: white;
      border-radius: 12px;
      padding: 20px;
      box-shadow: var(--card-shadow);
    }

    .card-header {
      color: #6c757d;
      font-size: 14px;
      font-weight: 600;
      margin-bottom: 15px;
      text-transform: uppercase;
    }

    .card-title {
      font-size: 28px;
      font-weight: 700;
      margin-bottom: 15px;
    }

    .card-subtitle {
      font-size: 14px;
      color: #6c757d;
      margin-bottom: 15px;
    }

    .chart-container {
      margin-top: 15px;
      height: 100px;
    }

    .progress-container {
      height: 8px;
      background-color: #e9ecef;
      border-radius: 4px;
      margin: 10px 0;
    }

    .progress-bar {
      height: 100%;
      background-color: var(--primary-color);
      border-radius: 4px;
    }

    .two-column-layout {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 20px;
      margin-bottom: 20px;
    }

    .chart-card {
      background: white;
      border-radius: 12px;
      padding: 20px;
      box-shadow: var(--card-shadow);
    }

    .chart-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }

    .chart-title {
      font-size: 18px;
      font-weight: 600;
    }

    .filter-group {
      display: flex;
      gap: 10px;
      margin-bottom: 15px;
    }

    .filter-btn {
      background-color: white;
      border: 1px solid var(--border-color);
      border-radius: 20px;
      padding: 6px 16px;
      cursor: pointer;
      font-size: 14px;
      transition: all 0.2s;
    }

    .filter-btn.active {
      background-color: var(--primary-color);
      color: white;
      border-color: var(--primary-color);
    }

    .recent-orders {
      background: white;
      border-radius: 12px;
      padding: 20px;
      box-shadow: var(--card-shadow);
    }

    .recent-orders-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }

    .view-all {
      color: var(--primary-color);
      text-decoration: none;
      font-size: 14px;
    }

    table {
      width: 100%;
      border-collapse: collapse;
    }

    th, td {
      padding: 12px 15px;
      text-align: left;
      border-bottom: 1px solid var(--border-color);
    }

    th {
      font-size: 14px;
      color: #6c757d;
      font-weight: 600;
    }

    .status-badge {
      padding: 6px 12px;
      border-radius: 20px;
      font-size: 12px;
      font-weight: 600;
      display: inline-block;
    }

    .status-processing {
      background-color: #e3f2fd;
      color: #2196f3;
    }

    .status-completed {
      background-color: #e8f5e9;
      color: #4caf50;
    }

    .large-chart-container {
      height: 300px;
      margin-top: 20px;
    }

    .top-lists-container {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 20px;
      margin-top: 20px;
    }

    .top-list-card {
      background: white;
      border-radius: 12px;
      padding: 20px;
      box-shadow: var(--card-shadow);
    }

    .top-list-title {
      font-size: 18px;
      font-weight: 600;
      margin-bottom: 15px;
    }

    .top-list {
      list-style: none;
    }

    .top-list-item {
      display: flex;
      justify-content: space-between;
      padding: 10px 0;
      border-bottom: 1px solid var(--border-color);
    }

    .top-list-name {
      font-weight: 500;
    }

    .top-list-value {
      font-weight: 600;
      color: var(--primary-color);
    }

    @media (max-width: 768px) {
      .two-column-layout {
        grid-template-columns: 1fr;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="dashboard-header">
      <h1 class="dashboard-title">Admin Dashboard</h1>
      <div class="filter-controls">
       
      </div>
    </div>

    <!-- Stats Cards -->
    <div class="cards-container">
      <div class="card">
        <div class="card-header">Total Sales</div>
        <div class="card-subtitle">THIS MONTH</div>
        <div class="card-title">₹<span id="total-sales">0</span></div>
        <div class="chart-container">
          <canvas id="sales-chart"></canvas>
        </div>
      </div>

      <div class="card">
        <div class="card-header">Customers</div>
        <div class="card-subtitle">THIS MONTH</div>
        <div class="card-title"><span id="total-customers">0</span></div>
        <div class="chart-container">
          <canvas id="customers-chart"></canvas>
        </div>
      </div>

      <div class="card">
        <div class="card-header">Orders</div>
        <div class="card-subtitle">MONTHLY GOAL: <span id="monthly-goal">1000</span></div>
        <div class="card-title"><span id="total-orders">0</span></div>
        <div class="progress-container">
          <div class="progress-bar" style="width: 0%;"></div>
        </div>
        <div class="card-subtitle"><span id="orders-left">1000</span> left</div>
      </div>
    </div>

    <!-- Main chart with filter -->
    <div class="chart-card">
      <div class="chart-header">
        <div class="chart-title">Sales Overview</div>
        <div class="filter-group">
          <button class="filter-btn" data-period="daily">Daily</button>
          <button class="filter-btn" data-period="weekly">Weekly</button>
          <button class="filter-btn active" data-period="monthly">Monthly</button>
          <button class="filter-btn" data-period="yearly">Yearly</button>
        </div>
      </div>
      <div class="large-chart-container">
        <canvas id="main-sales-chart"></canvas>
      </div>
    </div>

    <!-- Two Column Layout -->
    <div class="two-column-layout">
      <!-- Best Selling Chart -->
      <div class="chart-card mt-4">
        <div class="chart-header">
          <div class="chart-title">Best Selling</div>
          <div>THIS MONTH</div>
        </div>
        <h2 class="card-title">₹<span id="best-selling-total">0</span></h2>
        <div class="card-subtitle">Total Sales</div>
        <div style="width: 200px; height: 200px; margin: 0 auto;">
          <canvas id="doughnut-chart"></canvas>
        </div>
        <div style="text-align: center; margin-top: 20px;">
          <div style="font-weight: 600; font-size: 18px;" id="top-product-name"></div>
          <div style="color: #6c757d; margin-top: 5px;" id="top-product-sales"></div>
        </div>
      </div>

      <!-- Recent Orders Table -->
      <div class="recent-orders mt-4">
        <div class="recent-orders-header">
          <div class="chart-title">Recent Orders</div>
          <a href="/admin/orders" class="view-all">View All</a>
        </div>
        <table>
          <thead>
            <tr>
              <th>Customer</th>
              <th>Date</th>
              <th>Total</th>
              <th>Status</th>
            </tr>
          </thead>
          <tbody id="recent-orders-table">
            <!-- Orders will be populated here -->
          </tbody>
        </table>
      </div>
    </div>

    <!-- Top Lists -->
    <div class="top-lists-container">
      <div class="top-list-card">
        <h3 class="top-list-title">Best Selling Products (Top 10)</h3>
        <ul class="top-list" id="top-products-list"></ul>
      </div>

      <div class="top-list-card">
        <h3 class="top-list-title">Best Selling Categories (Top 10)</h3>
        <ul class="top-list" id="top-categories-list"></ul>
      </div>

      <div class="top-list-card">
        <h3 class="top-list-title">Best Selling Brands (Top 10)</h3>
        <ul class="top-list" id="top-brands-list"></ul>
      </div>
    </div>
  </div>

  <script>
    // Function to format date
    function formatDate(dateString) {
      const date = new Date(dateString);
      return `${date.getDate()} ${date.toLocaleString('default', { month: 'short' })}, ${date.getFullYear()}`;
    }

    // Function to format currency
    function formatCurrency(amount) {
      return new Intl.NumberFormat('en-IN', { style: 'currency', currency: 'INR' }).format(amount);
    }

    // Fetch dashboard data
    async function fetchDashboardData(timeFilter = 'monthly') {
      try {
        const response = await fetch(`/admin/dashboard-details?timeFilter=${timeFilter}`);
        if (!response.ok) throw new Error('Failed to fetch dashboard data');
        return await response.json();
      } catch (error) {
        console.error('Error fetching dashboard data:', error);
        return null;
      }
    }

    // Populate recent orders table
    function populateRecentOrders(orders) {
      const tableBody = document.getElementById('recent-orders-table');
      tableBody.innerHTML = '';

      orders.forEach(order => {
        const tr = document.createElement('tr');
        const status = order.items[0].status || 'PROCESSING'; 
        tr.innerHTML = `
          <td>${order.user?.full_name || 'Unknown'}</td>
          <td>${formatDate(order.createdAt)}</td>
          <td>${formatCurrency(order.totalAmount)}</td>
          <td>
            <span class="status-badge ${status === 'DELIVERED' ? 'status-completed' : 'status-processing'}">
              ${status === 'DELIVERED' ? 'Completed' : 'Processing'}
            </span>
          </td>
        `;
        tableBody.appendChild(tr);
      });
    }

    // Populate top lists
    function populateTopLists(products, categories, brands) {
      const productsListEl = document.getElementById('top-products-list');
      const categoriesListEl = document.getElementById('top-categories-list');
      const brandsListEl = document.getElementById('top-brands-list');

      productsListEl.innerHTML = '';
      categoriesListEl.innerHTML = '';
      brandsListEl.innerHTML = '';

      // Products
      products.forEach(product => {
        const li = document.createElement('li');
        li.className = 'top-list-item';
        li.innerHTML = `
          <span class="top-list-name">${product.title}</span>
          <span class="top-list-value">${formatCurrency(product.totalSales)}</span>
        `;
        productsListEl.appendChild(li);
      });

      // Categories
      categories.forEach(category => {
        const li = document.createElement('li');
        li.className = 'top-list-item';
        li.innerHTML = `
          <span class="top-list-name">${category.name}</span>
          <span class="top-list-value">${formatCurrency(category.totalSales)}</span>
        `;
        categoriesListEl.appendChild(li);
      });

      // Brands
      brands.forEach(brand => {
        const li = document.createElement('li');
        li.className = 'top-list-item';
        li.innerHTML = `
          <span class="top-list-name">${brand.name}</span>
          <span class="top-list-value">${formatCurrency(brand.totalSales)}</span>
        `;
        brandsListEl.appendChild(li);
      });
    }

    // Initialize Charts
    function initCharts(data) {
      const {
        totalSales,
        totalOrders,
        customers,
        monthlyGoal,
        currentMonthOrders,
        ordersLeft,
        goalProgress,
        timeSeriesData,
        timeSeriesLabels,
        topProducts
      } = data;

      // Update static values
      document.getElementById('total-sales').textContent = formatCurrency(totalSales).replace('₹', '');
      document.getElementById('total-customers').textContent = customers;
      document.getElementById('total-orders').textContent = totalOrders;
      document.getElementById('monthly-goal').textContent = monthlyGoal;
      document.getElementById('orders-left').textContent = ordersLeft;
      document.querySelector('.progress-bar').style.width = `${goalProgress}%`;

      // Update best selling section
      if (topProducts.length > 0) {
        document.getElementById('best-selling-total').textContent = formatCurrency(topProducts[0].totalSales).replace('₹', '');
        document.getElementById('top-product-name').textContent = topProducts[0].title;
        document.getElementById('top-product-sales').textContent = `${formatCurrency(topProducts[0].totalSales)} Sales`;
      }

      // Sales small chart
      const salesChartCtx = document.getElementById('sales-chart').getContext('2d');
      new Chart(salesChartCtx, {
        type: 'bar',
        data: {
          labels: timeSeriesLabels,
          datasets: [{
            data: timeSeriesData,
            backgroundColor: '#4361ee',
            borderRadius: 4,
            barThickness: 4,
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            legend: { display: false },
            tooltip: { enabled: false }
          },
          scales: {
            x: { display: false },
            y: { display: false }
          }
        }
      });

      // Customers small chart (using same time series data as placeholder)
      const customersChartCtx = document.getElementById('customers-chart').getContext('2d');
      new Chart(customersChartCtx, {
        type: 'line',
        data: {
          labels: timeSeriesLabels,
          datasets: [{
            data: timeSeriesData.map(val => val / 10), // Scale down for visualization
            borderColor: '#4361ee',
            tension: 0.4,
            pointRadius: 0,
            borderWidth: 2,
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            legend: { display: false },
            tooltip: { enabled: false }
          },
          scales: {
            x: { display: false },
            y: { display: false }
          }
        }
      });

      // Doughnut chart for best selling
      const doughnutChartCtx = document.getElementById('doughnut-chart').getContext('2d');
      new Chart(doughnutChartCtx, {
        type: 'doughnut',
        data: {
          labels: ['Top Product', 'Others'],
          datasets: [{
            data: topProducts.length > 0 ? [topProducts[0].totalSales, totalSales - topProducts[0].totalSales] : [0, 0],
            backgroundColor: ['#4361ee', '#e9ecef'],
            borderWidth: 0,
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          cutout: '75%',
          plugins: {
            legend: { display: false },
            tooltip: { enabled: false }
          }
        }
      });

      // Main sales chart
      const mainSalesChartCtx = document.getElementById('main-sales-chart').getContext('2d');
      const mainSalesChart = new Chart(mainSalesChartCtx, {
        type: 'line',
        data: {
          labels: timeSeriesLabels,
          datasets: [{
            label: 'Sales',
            data: timeSeriesData,
            borderColor: '#4361ee',
            backgroundColor: 'rgba(67, 97, 238, 0.1)',
            tension: 0.4,
            fill: true,
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            legend: { display: false }
          },
          scales: {
            x: { grid: { display: false } },
            y: {
              beginAtZero: true,
              grid: { borderDash: [5, 5] }
            }
          }
        }
      });

      // Filter buttons event listeners
      const filterButtons = document.querySelectorAll('.filter-btn');
      filterButtons.forEach(button => {
        button.addEventListener('click', async function() {
          filterButtons.forEach(btn => btn.classList.remove('active'));
          this.classList.add('active');

          const period = this.dataset.period;
          const newData = await fetchDashboardData(period);
          if (newData) {
            // Update static values
            document.getElementById('total-sales').textContent = formatCurrency(newData.totalSales).replace('₹', '');
            document.getElementById('total-customers').textContent = newData.customers;
            document.getElementById('total-orders').textContent = newData.totalOrders;
            document.getElementById('monthly-goal').textContent = newData.monthlyGoal;
            document.getElementById('orders-left').textContent = newData.ordersLeft;
            document.querySelector('.progress-bar').style.width = `${newData.goalProgress}%`;

            // Update best selling section
            if (newData.topProducts.length > 0) {
              document.getElementById('best-selling-total').textContent = formatCurrency(newData.topProducts[0].totalSales).replace('₹', '');
              document.getElementById('top-product-name').textContent = newData.topProducts[0].title;
              document.getElementById('top-product-sales').textContent = `${formatCurrency(newData.topProducts[0].totalSales)} Sales`;
            }

            // Update charts
            mainSalesChart.data.labels = newData.timeSeriesLabels;
            mainSalesChart.data.datasets[0].data = newData.timeSeriesData;
            mainSalesChart.update();

            // Update lists
            populateRecentOrders(newData.recentOrders);
            populateTopLists(newData.topProducts, newData.topCategories, newData.topClubs);
          }
        });
      });
    }

    // Initialize the dashboard
    async function initDashboard() {
      const data = await fetchDashboardData('monthly');
      if (data) {
        populateRecentOrders(data.recentOrders);
        populateTopLists(data.topProducts, data.topCategories, data.topClubs);
        initCharts(data);
      } else {
        console.error('Failed to initialize dashboard');
      }
    }

    // Run initialization when DOM is loaded
    document.addEventListener('DOMContentLoaded', initDashboard);
  </script>
</body>
</html>